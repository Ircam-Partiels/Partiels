
stages:
  - test
  - build
  - doc
  - publish

variables:
  GIT_SUBMODULE_STRATEGY: recursive

Test::MacOS:
  stage: test
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[debug]/'
  tags:
    - osx
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B build -G Xcode -DPARTIELS_BUILD_TAG=$CI_COMMIT_TAG
    - cmake --build build --target PartielsCheckFormat -- -quiet
    - ./Scripts/macos-build.sh Debug
    - ctest -C Debug -VV --test-dir build 

Test::Windows:
  stage: test
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[debug]/'
  tags:
    - windows
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B build -G "Visual Studio 17 2022" -A x64 -DTIMESTAMP_SERVER_URL="http://timestamp.digicert.com" -DPARTIELS_BUILD_TAG="$CI_COMMIT_TAG"
    - cmake --build build --target PartielsCheckFormat -- /nologo /verbosity:minimal
    - cmake --build build --config Debug
    - ctest -C Debug -VV --test-dir build 

Test::Linux:
  stage: test
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[debug]/'
  tags:
    - linux
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DPARTIELS_BUILD_TAG=$CI_COMMIT_TAG
    - cmake --build build --target PartielsCheckFormat -- --quiet
    - cmake --build build
    - ctest -C Debug -V --test-dir build 

Build::MacOS:
  stage: build
  tags:
    - osx
  before_script:
    - security create-keychain -p "$DEV_ID_PASSWORD" buildagent
    - security unlock-keychain -p "$DEV_ID_PASSWORD" buildagent
    - security list-keychains -s buildagent && security default-keychain -s buildagent
    - echo $DEV_ID_APP_CERT | base64 --decode > ./cert.p12
    - security import ./cert.p12 -P "$DEV_ID_PASSWORD" -A -t cert -f pkcs12 -k buildagent -T /usr/bin/codesign >/dev/null
    - rm ./cert.p12
    - security set-key-partition-list -S "apple-tool:,apple:,codesign:" -s -k "$DEV_ID_PASSWORD" buildagent >/dev/null
    - xcrun notarytool store-credentials "notary-partiels" --apple-id "$DEV_USER_APPLE_ID" --team-id 3BD2P55TR2 --password $DEV_SPEC_APP_PASSWORD >/dev/null
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B build -G Xcode -DPARTIELS_BUILD_TAG=$CI_COMMIT_TAG -DPARTIELS_PROVISIONING_PROFILE_SPECIFIER="Application Partiels"
    - cmake --build build --target PartielsCheckFormat -- -quiet
    - ./Scripts/macos-build.sh Release
    - ctest -C Release -VV --test-dir build
    - security unlock-keychain -p "$DEV_ID_PASSWORD" buildagent
    - ./Scripts/macos-release.sh -c Release -p $CI_PROJECT_DIR/build -p notary-partiels --ci
    - mv build/Partiels.dmg $CI_PROJECT_DIR
  after_script:
    - homedir=~
    - eval homedir=$homedir
    - default_keychain=$homedir/Library/Keychains/login.keychain-db
    - security default-keychain -s "$default_keychain" && security list-keychains -s "$default_keychain"
    - security delete-keychain buildagent || true
  artifacts:
    paths:
      - $CI_PROJECT_DIR/Partiels.dmg
    expire_in: 1 week

Build::Windows:
  stage: build
  tags:
    - windows
  before_script:
    - powershell -Command "& {[System.IO.File]::WriteAllBytes('$CI_PROJECT_DIR\cert.pfx', [System.Convert]::FromBase64String('$SECTIGO_CERT_P12'))}"
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B build -G "Visual Studio 17 2022" -A x64 -DTIMESTAMP_SERVER_URL="http://timestamp.digicert.com" -DPARTIELS_CODESIGN_WINDOWS_KEYFILE="$CI_PROJECT_DIR\cert.pfx" -DPARTIELS_CODESIGN_WINDOWS_KEYPASSWORD="$DEV_ID_PASSWORD" -DPARTIELS_BUILD_TAG="$CI_COMMIT_TAG"
    - cmake --build build --target PartielsCheckFormat -- /nologo /verbosity:minimal
    - cmake --build build --config Release
    - move-item -path ".\build\Partiels-install.exe" -destination ".\"
    - ctest -C Release -VV --test-dir build 
  after_script:
    - powershell -Command "Remove-Item -Path '$CI_PROJECT_DIR\cert.pfx' -Force"
  artifacts:
    paths:
      - $CI_PROJECT_DIR/Partiels-install.exe
    expire_in: 1 week

Build::Linux:
  stage: build
  tags:
    - linux
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DPARTIELS_BUILD_TAG=$CI_COMMIT_TAG
    - cmake --build build --target PartielsCheckFormat -- --quiet
    - cmake --build build
    - ctest -C Release -V --test-dir build 
    - $CI_PROJECT_DIR/Scripts/linux-package.sh $CI_PROJECT_DIR/Partiels
  artifacts:
    paths:
      - $CI_PROJECT_DIR/Partiels/
    expire_in: 1 week

Doc:
  stage: doc
  tags:
    - osx
  needs: []
  before_script:
    - npm install mdpdf -g
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B build -G Xcode -DPARTIELS_BUILD_TAG=$CI_COMMIT_TAG
    - cmake --build build --target PartielsManual -- -quiet
    - mv build/Partiels-Manual.pdf ./Partiels-Manual.pdf
  artifacts:
    paths:
      - $CI_PROJECT_DIR/Partiels-Manual.pdf
    expire_in: 1 week

Publish:
  stage: publish
  tags:
    - osx
  needs: ["Build::Linux", "Build::MacOS", "Build::Windows", "Doc"]
  only:
    - tags
  script:
    - $CI_PROJECT_DIR/Scripts/publish-all.sh --tag "$CI_COMMIT_TAG" -u "$NEXTCLOUD_NAME" -p "$NEXTCLOUD_PASSWORD" --ci
