
stages:
  - test
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

Test::Windows:
  stage: test
  tags:
    - windows
  script:
    - cd $CI_PROJECT_DIR
    - mkdir debug
    - cd debug
    - cmake .. -G "Visual Studio 16 2019" -A x64
    - cmake --build . --config Debug

Test::Linux:
  stage: test
  tags:
    - linux
  script:
    - cd $CI_PROJECT_DIR
    - mkdir debug
    - cd debug
    - cmake .. -DCMAKE_BUILD_TYPE=Debug
    - cmake --build .

Build::Windows:
  stage: build
  needs: ["Test::Windows"]
  tags:
    - windows
  script:
    - cd $CI_PROJECT_DIR
    - mkdir release
    - cd release
    - cmake .. -G"Visual Studio 16 2019" -A x64
    - cmake --build . --config Release
  artifacts:
    paths:
      - $CI_PROJECT_DIR\release\Analyse_artefacts\Release\Brioche.exe
    expire_in: 1 week

Build::Linux:
  stage: build
  needs: ["Test::Linux"]
  tags:
    - linux
  script:
    - cd $CI_PROJECT_DIR
    - mkdir release
    - cd release
    - cmake .. -DCMAKE_BUILD_TYPE=Release
    - cmake --build .
  artifacts:
    paths:
      - $CI_PROJECT_DIR\release\Analyse_artefacts\Brioche
    expire_in: 1 week

Deploy::Windows:
  stage: deploy
  needs: ["Build::Windows"]
  tags:
    - windows
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - cd $CI_PROJECT_DIR\release\Analyse_artefacts\Release
    - tar.exe -a -c -f Brioche-v$CI_COMMIT_TAG-Windows-10.zip Brioche.exe
    - cp Brioche-v$CI_COMMIT_TAG-Windows-10.zip C:\Users\pierr\Nextcloud\Brioche\Alpha

Deploy::Linux:
  stage: deploy
  needs: ["Build::Linux"]
  tags:
    - linux
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - cd $CI_PROJECT_DIR\release\Analyse_artefacts
    - mkdir Bioche-v$CI_COMMIT_TAG && cd Bioche-v$CI_COMMIT_TAG
    - cp ..\Brioche Bioche
    - cp ..\..\..\BinaryData\Icons\icon.png icon.png
    - cp ..\..\..\BinaryData\Misc\Brioche.desktop Brioche.desktop
    - cd ..
    - tar -a -c -f Brioche-v$CI_COMMIT_TAG-Ubuntu-x86_64.zip Bioche-v$CI_COMMIT_TAG
    - cp Brioche-v$CI_COMMIT_TAG-Ubuntu-x86_64.zip ~\Nextcloud\Brioche\Alpha
